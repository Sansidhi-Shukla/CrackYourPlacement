/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* temp = head;
        ListNode* prev = NULL;
        ListNode* prev2 = NULL;
        if(head==NULL || head->next == NULL){
            return head;
        }
        while (temp != NULL && temp->val < x ) {
            prev = temp;
            temp = temp->next;
        }
        if(temp==NULL){
            return head;
        }
        ListNode* curr = temp;
        while (temp != NULL) {
            if (temp->val < x) {
                prev2->next = temp->next;
                temp->next = curr;
                if (curr != head) {
                    prev->next = temp;
                }
                else{
                    head = temp;
                }
                prev = temp;
                temp = prev2->next;
            } else {
                prev2 = temp;
                temp = temp->next;
            }
        }
        return head;
    }
};
