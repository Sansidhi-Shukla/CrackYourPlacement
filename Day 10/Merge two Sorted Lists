/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ans2 = new ListNode();
        ListNode* ans = ans2;
        ListNode* l1 = list1;
        ListNode* l2 = list2;
        while(l1 != NULL && l2 != NULL){
            if(l1->val>l2->val){
                ListNode* n = new ListNode(l2->val);
                ans->next = n;
                ans=ans->next;
                l2=l2->next;
            }
            else{
                ListNode* n = new ListNode(l1->val);
                ans->next = n;
                ans=ans->next;
                l1=l1->next;
            }
        }
        while(l2 != NULL){
            ListNode* n = new ListNode(l2->val);
                ans->next = n;
                ans=ans->next;
                l2=l2->next;
        }
        while(l1 != NULL){
            ListNode* n = new ListNode(l1->val);
                ans->next = n;
                ans=ans->next;
                l1=l1->next;
        }

        ans = ans2;
        ans = ans->next;
        ans2->next = NULL;
        delete ans2;
        return ans;


    }
};
