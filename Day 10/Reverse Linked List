/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    //solution using recursion
    /*ListNode* recursion(ListNode*prev , ListNode* curr ){
        if(curr== NULL){
            return prev;
        }
        ListNode* next = curr->next;
        curr->next = prev;
        prev = curr ;
        curr = next ;
        return recursion(prev , curr);
    }*/

    ListNode* reverseList(ListNode* head) {
        ListNode *curr = head;
        ListNode *tail = head;
        ListNode *prev = NULL;
        ListNode *next = new ListNode();
        while(curr != NULL){
            next= curr->next;
            curr->next = prev ;
            prev = curr;
            curr = next;
        }
        head = prev;
        return head ;
        //return recursion(prev,curr);
    }
};
