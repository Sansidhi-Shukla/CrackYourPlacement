class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if (nums.size() < 3) {
            return {};
        }
        sort(nums.begin(), nums.end());
        int sum = 0;
        vector<vector<int>> ans;
        for (int i = 0; i < nums.size() - 2; i++) {
            if (nums[i] > 0) {
                break;
            }
            sum = 0;
            sum -= nums[i];
            int j = i + 1, k = nums.size() - 1;
            if (i == 0 || nums[i] != nums[i - 1]) {
                while (j < k) {
                    if (nums[j] + nums[k] == sum) {
                        // main condition
                        ans.push_back({nums[i], nums[j], nums[k]});
                        int l_j = nums[j], l_k = nums[k];
                        while (j < k && nums[j] == l_j) {
                            j++;
                        }
                        while (j < k && nums[k] == l_k) {
                            k--;
                        }
                    } else if (nums[j] + nums[k] > sum) {
                        k--;
                    } else {
                        j++;
                    }
                }
            }
        }
        return ans;
    }
};
